<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zephyr's Blog</title><link>https://zhangxume.github.io/en/</link><description>Recent content on Zephyr's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>2024 Zephyr. All rights reserved.</copyright><lastBuildDate>Wed, 10 Jul 2024 19:06:57 +0800</lastBuildDate><atom:link href="https://zhangxume.github.io/en/index.xml" rel="self" type="application/rss+xml"/><item><title>InternLM Tutorial Notes (1)</title><link>https://zhangxume.github.io/en/posts/internlm-tutorial/</link><pubDate>Wed, 10 Jul 2024 19:06:57 +0800</pubDate><guid>https://zhangxume.github.io/en/posts/internlm-tutorial/</guid><description>Zephyr's Blog https://zhangxume.github.io/en/posts/internlm-tutorial/ -&lt;h1 id="linux">Linux&lt;/h1>
&lt;h2 id="ssh-connection">SSH Connection&lt;/h2>
&lt;p>Create a personal development machine and SSH remote connection using VS Code on InternStudio platform.&lt;br>
Display summary information about GPU status, &lt;code>nvidia-smi&lt;/code>：&lt;/p>
&lt;p>&lt;img alt="GPU status" src="https://zhangxume.github.io/images/gpu-status.png">&lt;/p>
&lt;h2 id="port-mapping">Port Mapping&lt;/h2>
&lt;p>Use the ssh command for port mapping.&lt;br>
Run a web demo, &lt;code>helloworld.py&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> re
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> gradio &lt;span style="color:#66d9ef">as&lt;/span> gr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># get hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_hostname&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hostname &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>gethostname()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">match&lt;/span> &lt;span style="color:#f92672">=&lt;/span> re&lt;span style="color:#f92672">.&lt;/span>search(&lt;span style="color:#e6db74">r&lt;/span>&lt;span style="color:#e6db74">&amp;#39;-(\d+)$&amp;#39;&lt;/span>, hostname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">match&lt;/span>&lt;span style="color:#f92672">.&lt;/span>group(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># create Gradio interface&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> gr&lt;span style="color:#f92672">.&lt;/span>Blocks(gr&lt;span style="color:#f92672">.&lt;/span>themes&lt;span style="color:#f92672">.&lt;/span>Soft()) &lt;span style="color:#66d9ef">as&lt;/span> demo:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> html_code &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;p align=&amp;#34;center&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;a href=&amp;#34;https://intern-ai.org.cn/home&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;img src=&amp;#34;https://intern-ai.org.cn/assets/headerLogo-4ea34f23.svg&amp;#34; alt=&amp;#34;Logo&amp;#34; width=&amp;#34;20%&amp;#34; style=&amp;#34;border-radius: 5px;&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;h1 style=&amp;#34;text-align: center;&amp;#34;&amp;gt;☁️ Welcome &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>get_hostname()&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> user, welcome to the ShuSheng LLM Practical Camp Course!&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;h2 style=&amp;#34;text-align: center;&amp;#34;&amp;gt;😀 Let’s go on a journey through ShuSheng Island together.&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;p align=&amp;#34;center&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;a href=&amp;#34;https://github.com/InternLM/Tutorial/blob/camp3&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;img src=&amp;#34;https://oss.lingkongstudy.com.cn/blog/202406301604074.jpg&amp;#34; alt=&amp;#34;Logo&amp;#34; width=&amp;#34;20%&amp;#34; style=&amp;#34;border-radius: 5px;&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gr&lt;span style="color:#f92672">.&lt;/span>Markdown(html_code)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>demo&lt;span style="color:#f92672">.&lt;/span>launch()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When running in the terminal of the Web IDE without port mapping, you can&amp;rsquo;t access it with local IP, but after port mapping, you can see the web ui interface when you open the link in the web page.&lt;br>
VS Code provides automatic port mapping without the need to configure it manually.&lt;/p>
&lt;p>&lt;img alt="web-demo" src="https://zhangxume.github.io/images/web-demo.png">&lt;/p>
&lt;h1 id="python">Python&lt;/h1>
&lt;h2 id="wordcount">Wordcount&lt;/h2>
&lt;p>Implements a wordcount function that counts the number of times each word occurs in an English string. Returns a dictionary with key as the word and value as the number of times the word occurs.&lt;br>
Example：&lt;br>
Input：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;&amp;#34;&amp;#34;Hello world!
This is an example.
Word count is fun.
Is it fun to count words?
Yes, it is fun!&amp;#34;&amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Output：&lt;/p>
&lt;pre tabindex="0">&lt;code>{&amp;#39;hello&amp;#39;: 1,&amp;#39;world!&amp;#39;: 1,&amp;#39;this&amp;#39;: 1,&amp;#39;is&amp;#39;: 3,&amp;#39;an&amp;#39;: 1,&amp;#39;example&amp;#39;: 1,&amp;#39;word&amp;#39;: 1,
&amp;#39;count&amp;#39;: 2,&amp;#39;fun&amp;#39;: 1,&amp;#39;Is&amp;#39;: 1,&amp;#39;it&amp;#39;: 2,&amp;#39;to&amp;#39;: 1,&amp;#39;words&amp;#39;: 1,&amp;#39;Yes&amp;#39;: 1,&amp;#39;fun&amp;#39;: 1 }
&lt;/code>&lt;/pre>&lt;p>Function implementation, where it is assumed that &lt;code>'&lt;/code> is part of &lt;code>it's&lt;/code> and will not be removed and split into &lt;code>it is&lt;/code>. For simplicity, consider only the punctuation present in the example inputs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">wordcount&lt;/span>(text: str):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> punctuation &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;!&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;?&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> p &lt;span style="color:#f92672">in&lt;/span> punctuation:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#f92672">=&lt;/span> text&lt;span style="color:#f92672">.&lt;/span>replace(p, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#f92672">=&lt;/span> text&lt;span style="color:#f92672">.&lt;/span>lower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> words &lt;span style="color:#f92672">=&lt;/span> text&lt;span style="color:#f92672">.&lt;/span>split()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> word_count &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> word &lt;span style="color:#f92672">in&lt;/span> words:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> word &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> word_count:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> word_count[word] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> word_count[word] &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> word_count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Got this panda plush toy for my daughter&amp;#39;s birthday,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> who loves it and takes it everywhere. It&amp;#39;s soft and
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> super cute, and its face has a friendly look. It&amp;#39;s
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> a bit small for what I paid though. I think there
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> might be other options that are bigger for the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> same price. It arrived a day earlier than expected,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> so I got to play with it myself before I gave it
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> to her.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> wordcount(text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(result)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="debug">Debug&lt;/h2>
&lt;p>Click on the left side of the line number to set a breakpoint in the code where you want to check. For example, set breakpoints at lines &lt;code>words = text.split()&lt;/code> and &lt;code>word_count = {}&lt;/code>.&lt;br>
Check for changes in the state of variable values during debugging.&lt;br>
Use the dictionary &lt;code>word_counts&lt;/code> to count the number of times each word occurs. If the word is already in the dictionary, add 1 to the count; if the word is not in the dictionary, initialize the count to 1.&lt;/p>
&lt;p>&lt;img alt="debug" src="https://zhangxume.github.io/images/debug.png">&lt;/p>
&lt;p>Debugging results, the program executes normally and outputs the correct word count results:&lt;/p>
&lt;p>&lt;img alt="wordcount-result" src="https://zhangxume.github.io/images/wordcount-result.png">&lt;/p>
&lt;h1 id="git">Git&lt;/h1>
&lt;p>Github Notes Repository&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://github.com/InternLM/Tutorial">https://github.com/InternLM/Tutorial&lt;/a>&lt;/p>
- https://zhangxume.github.io/en/posts/internlm-tutorial/ - 2024 Zephyr. All rights reserved.</description></item><item><title>Optimization Methods Notes (1)</title><link>https://zhangxume.github.io/en/posts/optimization-methods-notes/</link><pubDate>Fri, 22 Sep 2023 21:11:46 +0800</pubDate><guid>https://zhangxume.github.io/en/posts/optimization-methods-notes/</guid><description>Zephyr's Blog https://zhangxume.github.io/en/posts/optimization-methods-notes/ -&lt;h1 id="optimization">Optimization&lt;/h1>
&lt;p>Optimization finds the &amp;ldquo;best&amp;rdquo; possible solutions from a set of feasible points.&lt;/p>
&lt;p>An optimization problem takes the form of minimizing (or maximizing) an objective function subject to constraints:&lt;/p>
&lt;p>$$
\begin{array}{ll}\mathrm{Minimize}&amp;amp;f(x) \\
\mathrm{subject~to}&amp;amp;x\in\Omega.\end{array}
$$&lt;/p>
&lt;ul>
&lt;li>$x\in\mathbb{R}^n$ is called decision variables.&lt;/li>
&lt;li>$f$ is called the objective function.&lt;/li>
&lt;li>$\Omega\subseteq\mathbb{R}^n$ is called the constraint set / feasible set / feasible region.&lt;/li>
&lt;/ul>
&lt;p>The symmetry of $G$ can be assume without loss of generality:&lt;br>
for any $H\in\mathbb{R}^{n\times n}$ (no symmetric) and $x\in\mathbb{R}^n$, we have:
$$\lbrack x^THx\rbrack_{1\times 1}=\lbrack x^THx\rbrack^T_{1\times 1}=x^TH^Tx$$
so:
$$x^THx=x^TH^Tx=\frac12x^T(\underbrace{H^T+H}_{\text{symmetric matrix $G$}})x.$$
For $f(x)=\frac12x^TGx+c^Tx+\beta$ with $G\in\mathbb{R}^{n\times n}$ being symmetric, so:
$$\nabla f(x)=Gx+c.$$&lt;/p>
&lt;h1 id="infimum">Infimum&lt;/h1>
&lt;p>$l=\inf S, \inf\emptyset=\infty$&lt;br>
Let $S\subseteq\mathbb{R}$ be a nonempty set. We say that $l\in[-\infty, \infty)$ is the infimum of $S$, if:&lt;/p>
&lt;ul>
&lt;li>for every $s\in S, s \geq l$&lt;/li>
&lt;li>for every $\zeta&amp;gt;l(\zeta\in\mathbb{R})$, one can find $s\in S$ so that $s&amp;lt;\zeta$&lt;/li>
&lt;/ul>
&lt;p>infimum is the largest number that is smaller than everything in $S$.&lt;br>
refer to set the infimum value as the optimal value.&lt;/p>
&lt;h1 id="norm">Norm&lt;/h1>
&lt;h2 id="common-vector-norms">Common vector norms&lt;/h2>
&lt;ul>
&lt;li>$l_1$ norm: $\vert\vert x\vert\vert_1:=\sum_{i=1}^{n}|x_i|\quad$ (sum of abs value)&lt;/li>
&lt;li>$l_2$ norm: $\vert\vert x\vert\vert_2:=\sqrt{\sum_{i=1}^{n}|x_i|^2}\quad$ ($\vert\vert x\vert\vert_2^2=\begin{bmatrix}x1&amp;amp;x2\end{bmatrix}\begin{bmatrix}x_1\\x_2\end{bmatrix}=x^Tx$)&lt;/li>
&lt;li>$l_\infty$ norm: $\vert\vert x\vert\vert_\infty:=\max_{i\leq i\leq n}|x_i|\quad$ (max abs value)&lt;/li>
&lt;/ul>
&lt;h2 id="common-matrix-norms">Common matrix norms&lt;/h2>
&lt;p>$\vert\vert A\vert\vert_1=\underbrace{\max_j\sum_{i=1}^{n}|a_{ij}|}_{\text{maximum of the $l_1$ norms of columns}}$&lt;/p>
&lt;ul>
&lt;li>induced matrix norm&lt;br>
$\underset{||x||_1=1}{\max}||Ax||_1$&lt;/li>
&lt;/ul>
&lt;p>$\vert\vert A\vert\vert_2=\underbrace{\sqrt{\lambda_{max}(A^TA)}}_{\text{maximum eigenvalue of $A^TA$}}$&lt;/p>
&lt;ul>
&lt;li>induced matrix norm&lt;br>
$\underset{||x||_2=1}{\max}||Ax||_2$&lt;/li>
&lt;/ul>
&lt;p>$\vert\vert A\vert\vert_\infty=\underbrace{\max_i\sum_{j=1}^{n}|a_{ij}|}_{\text{maximum of the $l_1$ norms of rows}}$&lt;/p>
&lt;ul>
&lt;li>induced matrix norm&lt;br>
$\max_{\vert\vert x\vert\vert_\infty=1}||Ax||_\infty$&lt;/li>
&lt;/ul>
&lt;p>$\vert\vert A\vert\vert_F=\underbrace{\sqrt{\sum_{i=1}^{n}\sum_{j=1}^{n}|a_{ij}|^2}}_{\text{known as the Frobenius norm}}$&lt;/p>
&lt;p>For symmetric A&lt;br>
$$\underset{||x||=1}{\min}x^TAx=\lambda_{\min}(A)$$
$$\underset{||x||=1}{\max}x^TAx=\lambda_{\max}(A)\xlongequal[]{if A\succ0}||A||_2$$&lt;/p>
&lt;h1 id="positive-definite-matrices">Positive definite matrices&lt;/h1>
&lt;h2 id="positive-semidefinite-matrices">Positive semidefinite matrices&lt;/h2>
&lt;p>Let $A\in\mathbb{R}^{n\times n}$ be symmetric, we say that $A$ is positive semidefinite if $x^TAx\geq0$, for all $x\in\mathbb{R}^{n}$. $A\succeq0$&lt;br>
Example:&lt;br>
$$A=\left[\begin{matrix}3&amp;amp;1\\1&amp;amp;2\end{matrix}\right]$$
$$x^TAx=\left[\begin{matrix}x1&amp;amp;x2\end{matrix}\right]\left[\begin{matrix}3&amp;amp;1\\1&amp;amp;2\end{matrix}\right]\left[\begin{matrix}x1\\x2\end{matrix}\right]$$
$$=3x_1^2+2x_1x_2+2x_2^2$$
$$=2x_1^2+(x_1+x_2)^2+x_2^2\geq0$$&lt;/p>
&lt;h2 id="positive-definite-matrices-1">Positive definite matrices&lt;/h2>
&lt;p>Let $A\in\mathbb{R}^{n\times n}$ be symmetric, we say that $A$ is positive definite if $x^TAx&amp;gt;0$, for all $x\in\mathbb{R}^{n}$\{0}.&lt;br>
$A\succ0$&lt;/p>
&lt;p>if $D\succ0$ (positive definite)&lt;br>
$d=-D\nabla f(x)$ is a descent direction&lt;/p>
&lt;h1 id="taylors-theorem">Taylor&amp;rsquo;s theorem&lt;/h1>
&lt;h2 id="with-remainder-term">with remainder term&lt;/h2>
&lt;p>Suppose $f$ is (n+1) times differentiable on an open interval containing $[a,b]$. Then:
$$
f(b) = f(a) + f&amp;rsquo;(a)(b-a) + \frac{f&amp;rsquo;&amp;rsquo;(a)}{2!}(b-a)^2 + \cdots + \frac{f^{(n)}(a)}{n!}(b-a)^n + \frac{f^{(n+1)}(\xi)}{(n+1)!}(b-a)^{n+1}
$$
for some ${\xi \in (a,b)}$.&lt;/p>
&lt;h2 id="with-remainder-term-high-dimensional">with remainder term high-dimensional&lt;/h2>
&lt;p>Let $f\in C^1(\mathbb{R}^n)$, $x$ and $y\in\mathbb{R}^n$. Then there exists
$\xi\in{(1-s)x+sy:s\in(0,1)}$ such that
$$f(y)=f(x)+[\nabla f(\xi)]^T(y-x).$$&lt;/p>
&lt;p>Let $f\in C^2(\mathbb{R}^n)$, $x$ and $y\in\mathbb{R}^n$. Then there exists
$\xi\in {(1-s)x + sy : s \in (0,1)}$ such that
$$f(y) = f(x) + [\nabla f(x)]^T (y - x) + \frac{1}{2}(y - x)^T \nabla^2 f(\xi) (y - x).
$$&lt;/p>
- https://zhangxume.github.io/en/posts/optimization-methods-notes/ - 2024 Zephyr. All rights reserved.</description></item><item><title>IELTS Self Study Guide</title><link>https://zhangxume.github.io/en/posts/ielts-self-study-guide/</link><pubDate>Sat, 05 Aug 2023 13:03:04 +0800</pubDate><guid>https://zhangxume.github.io/en/posts/ielts-self-study-guide/</guid><description>Zephyr's Blog https://zhangxume.github.io/en/posts/ielts-self-study-guide/ -&lt;h1 id="preface">Preface&lt;/h1>
&lt;p>Firstly, it&amp;rsquo;s important to understand the overall structure of the IELTS exam and dedicate a substantial amount of time specifically for IELTS preparation.&lt;/p>
&lt;p>IELTS consists of four sections: Listening, Reading, Writing, and Speaking.&lt;/p>
&lt;blockquote>
&lt;p>Learning any content is an accumulative process, and this article only applies to short-term rapid learning.&lt;/p>
&lt;/blockquote>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;h2 id="listening">Listening&lt;/h2>
&lt;p>The Listening section lasts for 30 minutes and includes 4 recorded monologues and conversations. For paper-based exams, there&amp;rsquo;s time allocated to transfer answers to an answer sheet. This step is unnecessary for computer-based exams.&lt;/p>
&lt;h2 id="reading">Reading&lt;/h2>
&lt;p>The Reading section lasts for 60 minutes and includes 3 passages with corresponding questions. Some passages may also include diagrams or charts.&lt;/p>
&lt;h2 id="writing">Writing&lt;/h2>
&lt;p>The Writing section also lasts for 60 minutes. The first task involves writing a 150-word essay based on a table or graph. The second task requires writing a 250-word discursive essay based on a given topic.&lt;/p>
&lt;h2 id="speaking">Speaking&lt;/h2>
&lt;p>The Speaking section lasts for approximately 10-15 minutes and involves face-to-face questions and conversations.&lt;/p>
&lt;h1 id="method">Method&lt;/h1>
&lt;h2 id="listening-1">Listening&lt;/h2>
&lt;p>I started by practicing listening comprehension using physical copies of Cambridge IELTS materials and online resources.&lt;/p>
&lt;h2 id="reading-1">Reading&lt;/h2>
&lt;p>I familiarized myself with various types of articles and questions by completing full practice exams. The focus was on quickly locating and understanding key information within the passages.&lt;/p>
&lt;h2 id="writing-1">Writing&lt;/h2>
&lt;p>I referred to sample essays to understand how to structure responses according to different task requirements and effectively express logical viewpoints.&lt;/p>
&lt;h2 id="speaking-1">Speaking&lt;/h2>
&lt;p>Speaking primarily involves question-and-answer sessions, observing what questions might be asked and how others respond. The aim is not to memorize responses but to learn how to extend a topic, express your viewpoints clearly. For instance, if asked about your favorite color, simply stating the color isn&amp;rsquo;t enough; explain why you like it. The focus is on practicing conversation skills and articulating your thoughts effectively.&lt;/p>
&lt;p>In conclusion, the computer-based testing experience is favorable.&lt;/p>
&lt;h1 id="tips">Tips&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>The computer-based testing process includes check-in, waiting areas, verification zones, and the exam area. The procedures are generally similar across all test centers. The Speaking test is conducted separately and requires a separate appointment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Test centers provide earplugs and pens, so there&amp;rsquo;s no need to worry about external distractions. Some newly opened centers may have fewer people, making it easier to schedule appointments.&lt;/p>
&lt;/li>
&lt;/ul>
- https://zhangxume.github.io/en/posts/ielts-self-study-guide/ - 2024 Zephyr. All rights reserved.</description></item></channel></rss>